#make S3 bucket
resource "aws_s3_bucket" "routing-bucket-112290" {
  bucket = var.resource_bucket_name
   force_destroy = true

     server_side_encryption_configuration {
        rule {
          apply_server_side_encryption_by_default {
           sse_algorithm = "AES256"
        }
      }
    }
}
resource "aws_s3_bucket_acl" "routing-bucket-112290_acl" {
  bucket = aws_s3_bucket.routing-bucket-112290.id
  acl    = "private"
}

#upload website files to s3:
resource "aws_s3_object" "object" {
  bucket = aws_s3_bucket.routing-bucket-112290.id

  for_each     = fileset("uploads/", "*")
  key          = each.value
  source       = "uploads/${each.value}"
  etag         = filemd5("uploads/${each.value}")
  content_type = "text/html"
}


data "aws_iam_policy_document" "s3policy" {
  statement {
    actions = ["s3:GetObject"]
    resources = ["${aws_s3_bucket.routing-bucket-112290.arn}/*"]

    principals {
       type        = "AWS"
       identifiers = [aws_cloudfront_origin_access_identity.cloudfront_origin_ai.iam_arn]
    }
   }
}

resource "aws_s3_bucket_policy" "s3_policy" {
   bucket = aws_s3_bucket.routing-bucket-112290.id
   policy = data.aws_iam_policy_document.s3policy.json
   }
  

#versionineg S3 bucket
# resource "aws_s3_bucket_versioning" "versioning-piblicweb1122" {
#    bucket = aws_s3_bucket.routing-bucket-112290.id
#    versioning_configuration {
#    status = "Enabled"
#  }
#  }